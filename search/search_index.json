{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Roerich Roerich is a python library for online and offline change point detection in time series data. It was named after the painter Nicholas Roerich, known as the Master of the Mountains. Read more at: https://www.roerich.org. Fragment of \"Himalayas\", 1933 Currently, the library contains official implementations of change point detection algorithms based on direct density ratio estimation from the following articles: Mikhail Hushchyn and Andrey Ustyuzhanin. \u201cGeneralization of Change-Point Detection in Time Series Data Based on Direct Density Ratio Estimation.\u201d J. Comput. Sci. 53 (2021): 101385. [journal] [arxiv] Mikhail Hushchyn, Kenenbek Arzymatov and Denis Derkach. \u201cOnline Neural Networks for Change-Point Detection.\u201d ArXiv abs/2010.01388 (2020). [arxiv] Dependencies and install pip install roerich or git clone https://github.com/HSE-LAMBDA/roerich.git cd roerich python setup.py install Basic usage The following code snippet generates a noisy synthetic data, performs change point detection, and displays the results. If you use own dataset, make sure that it has a shape (seq_len, n_dims) . import roerich from roerich.algorithms import ChangePointDetectionClassifier # generate time series X, cps_true = roerich.generate_dataset(period=200, N_tot=2000) # detection cpd = ChangePointDetectionClassifier() score, cps_pred = cpd.predict(X) # visualization roerich.display(X, cps_true, score, cps_pred) Support Documentation: https://hse-lambda.github.io/roerich For any usage questions, suggestions and bugs use the issue page , please. Related libraries Thanks to all our contributors License BSD 2-Clause License Copyright (c) 2017, ENS Paris-Saclay, CNRS All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Home"},{"location":"#welcome-to-roerich","text":"Roerich is a python library for online and offline change point detection in time series data. It was named after the painter Nicholas Roerich, known as the Master of the Mountains. Read more at: https://www.roerich.org. Fragment of \"Himalayas\", 1933 Currently, the library contains official implementations of change point detection algorithms based on direct density ratio estimation from the following articles: Mikhail Hushchyn and Andrey Ustyuzhanin. \u201cGeneralization of Change-Point Detection in Time Series Data Based on Direct Density Ratio Estimation.\u201d J. Comput. Sci. 53 (2021): 101385. [journal] [arxiv] Mikhail Hushchyn, Kenenbek Arzymatov and Denis Derkach. \u201cOnline Neural Networks for Change-Point Detection.\u201d ArXiv abs/2010.01388 (2020). [arxiv]","title":"Welcome to Roerich"},{"location":"#dependencies-and-install","text":"pip install roerich or git clone https://github.com/HSE-LAMBDA/roerich.git cd roerich python setup.py install","title":"Dependencies and install"},{"location":"#basic-usage","text":"The following code snippet generates a noisy synthetic data, performs change point detection, and displays the results. If you use own dataset, make sure that it has a shape (seq_len, n_dims) . import roerich from roerich.algorithms import ChangePointDetectionClassifier # generate time series X, cps_true = roerich.generate_dataset(period=200, N_tot=2000) # detection cpd = ChangePointDetectionClassifier() score, cps_pred = cpd.predict(X) # visualization roerich.display(X, cps_true, score, cps_pred)","title":"Basic usage"},{"location":"#support","text":"Documentation: https://hse-lambda.github.io/roerich For any usage questions, suggestions and bugs use the issue page , please.","title":"Support"},{"location":"#related-libraries","text":"","title":"Related libraries"},{"location":"#thanks-to-all-our-contributors","text":"","title":"Thanks to all our contributors"},{"location":"#license","text":"BSD 2-Clause License Copyright (c) 2017, ENS Paris-Saclay, CNRS All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"}]}